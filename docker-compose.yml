services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: ["5432:5432"]
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]

  backend:
    build: ./backend
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports: ["8000:8000"]
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  simulator:
    build: ./simulator
    env_file: .env
    depends_on:
      backend:
        condition: service_healthy
    command: ["python", "run.py"]

  telemetry-sim-1:
    build: ./telemetry-simulator
    environment:
      - API_URL=http://backend:8000/api/v1/heartbeats
      - DEVICE_ID=100000000000
    depends_on:
      backend:
        condition: service_healthy

  telemetry-sim-2:
    build: ./telemetry-simulator
    environment:
      - API_URL=http://backend:8000/api/v1/heartbeats
      - DEVICE_ID=100000000001
    depends_on:
      backend:
        condition: service_healthy

  telemetry-sim-3:
    build: ./telemetry-simulator
    environment:
      - API_URL=http://backend:8000/api/v1/heartbeats
      - DEVICE_ID=100000000002
    depends_on:
      backend:
        condition: service_healthy


  frontend:
    build: ./frontend
    environment:
      - VITE_API_URL=${API_BASE_URL}
    ports: ["5173:5173"]
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["npm", "run", "dev", "--", "--host"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

volumes:
  db_data:
